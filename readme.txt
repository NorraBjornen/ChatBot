1)Реализовать хранение вопросов в бд (использовать FireBase). 
Логин и пароль для подключения к бд не должны храниться в коде (хранить их, например, в переменных окружения).

2)Реализовать одновременный доступ нескольких пользователей к чат-боту через многопоточность. 
Обработка сообщений от разных пользователей будет происходить в отдельном потоке, 
с отдельными экземплярами классов построения диалогов (ChatLogic и пр.).

3)Обеспечить синхронизированный доступ нескольких пользователей к общим ресурсам. 
В нашем случае синхронихация будет происходить по объекту соединения с базой данных. Использовать паттерн singleton или pool.

4)Реализовать возможность межпользовательского взаимодействия. 
Напрмер, "доска объявлений". Пользователь А может сделать запись на "доске объявлений", 
эта запись сохраняется в базу данных. 
При следующем запросе кого-либо из пользователей к "доске объявлений" данные с объявлениями будут загружаться из бд, 
соответственно будет показана и последняя запись, сделанная Пользователем А.

5)Организовать возможность общения нескольких пользователей одновременно через телеграмм.

------29.10.19--------
Все приватные настройки должны храниться в гитигнор
Паттерн singleton (double check locking)
Убрать статические методы в callboard
Использовать инъекцию зависимостей для базы данных
Инкапсулировать userId для telegram
Хранить только 1 экземпляр ChatLogic, а состояния вынести в класс Player(ранить информацию в бд)
Использовать подписку на входящие сообщения telegram. Реализовать publisher/subscriber для telegram

--------11.05.19--------------
Инъекция зависимостей в ChatLogic (Callboard)
--------16.11.19--------------
1. Введение понятия локаций и персонажей, игровой мир теперь представляет из себя граф, 
вершинами которого являются или какие бы то ни было локации, или npc, 
с которыми можно взаимодействовать, или точкой входа в квест, который точно так же является частью графа
2. Введение характеристик персонажа: опыта, золота, предметов, репутации
3. Использовать Mochito для тестирования
4. Использовать систему внедрения зависимостей (dagger или spring)
-------26.11.19-----
1. Выделить State в одельныый класс(где хранятся состояния мира для каждого игрока)
2. Выделить логику сохранения и загрузки State в отдельный класс
3. ЗАРЕГЕСТРИРОВАТЬ  TelegramIO в контейнере
4. Удалить неиспользуемый код(например в pringConfiguration)
5. Получат Player тоже из контейнера
6. Добавить предметы(карты, зелье опыта)
7. Описывать квесты отдельно от основного графа и написать квест для примера
8. Сделать унивирсальный модификатор состояния пользователя при заходе в вершину графа
--------10.12.19-------
Улучшение коммуникацию:
1.Можно заходить в таверну, видеть игроков, которые в таверне, и играть с ними в карты
2.Привязать chatId, который используется в телеграме к нику игрока
3.Ввести личные сообщения (нужно прийти на почту, там можно отправить письмо или купить почтового голубя,
и тогда письмо можно будет отправить из любой локации)