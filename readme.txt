1)Реализовать хранение вопросов в бд (использовать FireBase). 
Логин и пароль для подключения к бд не должны храниться в коде (хранить их, например, в переменных окружения).

2)Реализовать одновременный доступ нескольких пользователей к чат-боту через многопоточность. 
Обработка сообщений от разных пользователей будет происходить в отдельном потоке, 
с отдельными экземплярами классов построения диалогов (ChatLogic и пр.).

3)Обеспечить синхронизированный доступ нескольких пользователей к общим ресурсам. 
В нашем случае синхронихация будет происходить по объекту соединения с базой данных. Использовать паттерн singleton или pool.

4)Реализовать возможность межпользовательского взаимодействия. 
Напрмер, "доска объявлений". Пользователь А может сделать запись на "доске объявлений", 
эта запись сохраняется в базу данных. 
При следующем запросе кого-либо из пользователей к "доске объявлений" данные с объявлениями будут загружаться из бд, 
соответственно будет показана и последняя запись, сделанная Пользователем А.

5)Организовать возможность общения нескольких пользователей одновременно через телеграмм.

------29.10.19--------
Все приватные настройки должны храниться в гитигнор
Паттерн singleton (double check locking)
Убрать статические методы в callboard
Использовать инъекцию зависимостей для базы данных
Инкапсулировать userId для telegram
Хранить только 1 экземпляр ChatLogic, а состояния вынести в класс Player(ранить информацию в бд)
Использовать подписку на входящие сообщения telegram. Реализовать publisher/subscriber для telegram

--------11.05.19--------------
Инъекция зависимостей в ChatLogic (Callboard)
